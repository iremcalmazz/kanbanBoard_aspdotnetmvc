
@model IEnumerable<kanbanBoard_aspdotnetmvc.Models.Classes.Column>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_TestLayout.cshtml";
}

<!DOCTYPE HTML>
<html>

<body>

    <script src="~/web/js/cardData.js"></script>
    <div id="example">
        <div class="demo-section auto">

            <div class="configurator">
                <div class="box-col">
                    <span class="k-icon k-i-globe"></span>
                    <input id="language" value="en-US" />
                </div>
            </div>
            <div id="taskBoard"></div>
            <script id="column-template" type="text/x-kendo-template">
                <span class="column-template-container">
                    <span class="column-status">
                        # if (Status == "todo" || Status == "inProgress" || Status == "done") { #
                        <span class="column-badge" id="badge-#= Status #">0</span>
                        # } else { #
                        <span class="column-badge">0</span>
                        # } #
                        <span class="column-text">#: Text #</span>
                    </span>
                    <span class="column-buttons">#= buttons #</span>
                </span>
            </script>

            <script id="card-template" type="text/x-kendo-template">
                <div class="template-container">
                    <span class="template-header">
                        <p><a class="k-card-title k-link" href="" data-command="SelectCardCommand">#: Title #</a></p>

                        <span class="template-menu">#=cardMenuButton#</span>

                    </span>
                 <span class="template-body">

                 <span class="template-description">#: Description #</span>

                        # if (image != "") { #

                    <img class="k-card-image" src="#= image #" @*style="height:35px; width: 70px;*@">
                    # } #

                </span>

                </div>
            </script>

            <script id="tooltip-template" type="text/x-kendo-template">
                <div class="tooltip-template-container">
                    # var card = target.closest(".k-taskboard-card"); #

                    # var taskBoard = $("\\#taskBoard").data("kendoTaskBoard") #
                    # var item = taskBoard.dataItem(card);  #

                    <p>Title:  #: item.Title#</p>
                    <p> </p>
                    <p>Description: #: item.Description#</p>
                    <p> </p>
                   <p> Priority: #:item.Category#</p>
                </div>
            </script>


            <script>
                var dataSource = new kendo.data.DataSource({
                    transport: {
                        read: function (e) {
                            $.ajax({
                                url: "/Default/KendoCard",
                                dataType: "json",
                                success: function (result) {
                                    console.log(result);
                                    e.success(result);
                                },
                                error: function (result) {
                                    e.error(result);
                                }
                            });

                        },
                        update: function (e) {

                            var updatedItemID = e.data.Title;
                            var updatedDescID = e.data.Description;
                            var updatedCategoryID = e.data.Category;
                            var updatedStatusID = e.data.Status;
                            var updatedOrderID = e.data.Order;
                            var CardId = e.data.id;

                            $.ajax({

                                url: "/Default/UpdateCard/" + CardId,
                                type: "post",
                                dataType: "json",
                                data: {
                                    "updatedItem": updatedItemID,
                                    "updatedDescID": updatedDescID,
                                    "updatedCategoryID": updatedCategoryID,
                                    "updatedStatusID": updatedStatusID,
                                    "updatedOrderID": updatedOrderID
                                },


                            });
                            e.success();

                        },

                        destroy: function (e) {
                            var CardId = e.data.id;

                            $.ajax({
                                url: "/Default/DestroyCard/" + CardId,
                                dataType: "json",
                                type: "post",
                            });
                            e.success();
                        },
                        create: function (e) {
                            var titleId = e.data.Title;
                            var CardId = e.data.id;
                            var descriptionId = e.data.Description;
                            var categoryId = e.data.Category;
                            var StatusId = e.data.Status;
                            var orderId = e.data.Order;

                            $.ajax({
                                url: "/Default/NewCard/",
                                type: "post",
                                data: {
                                    "titleId": titleId,
                                    "CardId": CardId,
                                    "descriptionId": descriptionId,
                                    "categoryId": categoryId,
                                    "StatusId": StatusId,

                                },

                            });
                            e.success();

                        },
                        error: function (e) {
                            // Handle data operation error.
                            alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                        },
                    },
                    schema: {
                        model: {
                            id: "id",
                            fields: {
                                "id": { type: "number" },
                                "Category": { type: "string", defaultValue: "lowpriority" },
                                "Description": { type: "string" },
                                "Title": { type: "string", validation: { required: true } },
                                "Status": { type: "string", defaultValue: "todo" },
                                "Order": { type: "string" },
                                image: { from: "image", defaultValue: "" },


                            }
                        }
                    }
                });
                var priorities = new kendo.data.DataSource({
                    data: [
                        { value: "urgent", text: "Urgent", color: "orange" },
                        { value: "highpriority", text: "High Priority", color: "blue" },
                        { value: "lowpriority", text: "Low Priority", color: "green" }
                    ]
                });

                var taskBoard = $("#taskBoard").kendoTaskBoard({

                    columnSettings: {
                        dataTextField: "Text",
                        dataStatusField: "Status",
                        dataOrderField: "Order",
                        template: kendo.template($("#column-template").html()),
                        buttons: ["editColumn", "addCard", "deleteColumn"],
                    },
                    columns: {

                        transport: {

                            read: function (e) {

                                $.ajax({

                                    url: "/Default/KendoTable",
                                    dataType: "json",
                                    type: "get",
                                    success: function (result) {
                                        e.success(result);
                                    },
                                    error: function (result) {
                                        e.error(result);
                                    }
                                });
                            },
                            update: function (e) {
                                // Batch is disabled.
                                var updatedItemID = e.data.Text;
                                var id = e.data.ID;

                                $.ajax({

                                    url: "/Default/UpdateTable/",
                                    type: "post",
                                    dataType: "json",
                                    data: { "updatedItem": updatedItemID, "id": id },


                                });
                                e.success();

                            },
                            destroy: function (e) {
                                // Locate item in original datasource and remove it.

                                var ColId = e.data.ID;
                                console.log(ColId);
                                $.ajax({
                                    url: "/Default/DestroyTable/" + ColId,
                                    dataType: "json",
                                    type: "post",
                                });
                                e.success();
                            },
                            create: function (e) {
                                var textId = e.data.Text;
                                console.log(textId);
                                $.ajax({
                                    url: "/Default/NewTable/" + textId,
                                    type: "post",



                                });
                                e.success();

                            },
                            error: function (e) {
                                // Handle data operation error.
                                alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                            },
                        },
                        schema: {
                            model: {
                                id: "ID",
                                fields: {
                                    "ID": { type: "number" },
                                    "Text": { type: "string" },
                                    "Status": { type: "string", defaultValue: "" },
                                    "Order": { type: "string" }
                                }
                            }
                        }
                    },
                    cardMenu: [{ name: "editCard" }, { name: "deleteCard" }, { name: "Details", icon: "gear", text: "Details", command: "DetailsCommand", options: "myvalue", spriteCssClass: "custom-class" }],
                    dataCategoryField: "Category",
                    dataDescriptionField: "Description",
                    dataTitleField: "Title",
                    dataStatusField: "Status",
                    dataOrderField: "Order",
                    height: 970,
                    dataBound: onDataBound,
                    columnsDataBound: onColumnDataBound,
                    moveStart: onMoveStart,
                    moveEnd: onMoveEnd,
                    dataSource: dataSource,
                    resources: [
                        {
                            field: "Category",
                            title: "Priority",
                            dataSource: priorities

                        }
                    ],
                    template: kendo.template($("#card-template").html()),
                    previewPane: {
                        template: "<p>#:Description#</p>" +
                            "<p>#:resources.Category.title#: <span style='background-color: #:resources.Category.color#'>&nbsp;</span> #:resources.Category.text#</p>"
                    },
                    editable: {
                        form: {
                            buttonsTemplate: "",
                            items: [{
                                field: "Title",
                                label: "Title:"
                            }, {
                                field: "Description",
                                label: "Description:"
                            }, {
                                field: "Category",
                                label: "Priority:",
                                editor: "DropDownList",
                                editorOptions: {
                                    dataTextField: "text",
                                    dataValueField: "value",
                                    dataSource: priorities,
                                    template: "<span style='background-color: #:color#'>&nbsp;</span> #:text#",
                                    valueTemplate: "<span style='background-color: #:color#'>&nbsp;</span> #:text#"
                                }
                            }]
                        }
                    },
                });
                //details pop up
                kendo.ui.taskboard.commands["DetailsCommand"] = kendo.ui.taskboard.Command.extend({
                    exec: function (ev) {
                        var options = this.options;
                        var card = options.card;

                        kendo.alert(kendo.format('<p>Title: {0}</p>' +
                            '<p>Description: {1}</p>' +
                            '<p>Status:  {2}</p>' +
                            '<p>Priority: {3}  </p>',
                            card.Title,
                            card.Description,
                            card.Status,
                            card.Category));
                    }
                });
                var sourceColumnStatus = "";
                //tooltip function for cards
                $(document).ready(function () {


                    $("#taskBoard").kendoTooltip({
                        filter: ".k-taskboard-card",
                        content: kendo.template($("#tooltip-template").html()),
                        position: "left"
                    });
                });
                function onMoveStart(e) {
                    sourceColumnStatus = e.column.Status;
                }
                function onMoveEnd(e) {
                    var taskBoard = e.sender;

                    if (e.action == "receive") {
                        if (e.column.status == "inProgress") {
                            var totalInProgress = taskBoard.itemsByStatus("inProgress").length;

                            if (totalInProgress > 4 & sourceColumnStatus != "inProgress") {
                                e.preventDefault();
                                alert('No more than 4 tasks can be "In Progress" at the same time.');
                            }
                        }
                        else if (e.column.Status == "done") {
                            if (sourceColumnStatus == "todo") {
                                e.preventDefault();
                                alert('Only tasks "In Progress" can be moved to "Done".')
                            }
                        }

                        sourceColumnStatus = "";
                    }
                }

                function onDataBound(e) {
                    setBadgeText()
                }
                function onColumnDataBound(e) {

                    setBadgeText()

                }
                function setBadgeText() {
                    var taskBoard = $("#taskBoard").data("kendoTaskBoard");

                    for (var i = 0; i < taskBoard.columns().length; i++) {
                        var status = taskBoard.columnDataItem(taskBoard.columns()[i]).Status;
                        if (status == "todo") {

                            var totalToDo = taskBoard.itemsByStatus("todo").length;
                            initBadge("todo", "warning", totalToDo);
                        }
                        else if (status == "inProgress") {
                            var totalInProgress = taskBoard.itemsByStatus("inProgress").length;

                            initBadge("inProgress", "info", totalInProgress);
                        }
                        else if (status == "done") {
                            var totalDone = taskBoard.itemsByStatus("done").length;

                            initBadge("done", "success", totalDone);
                        }
                        else {
                            var column = $(taskBoard.columns()[i]);
                            var totalNoStatus = taskBoard.itemsByColumn(column).length;

                            initNoStatusBadge(column, "light", totalNoStatus);
                        }
                    }
                }
                function initBadge(id, color, totalItems) {
                    $('#badge-' + id).kendoBadge({
                        themeColor: color,
                        shape: 'circle',
                        text: totalItems
                    });



                }
                function initNoStatusBadge(column, color, totalItems) {
                    var badgeElement = column.find(".column-badge");

                    $(badgeElement).kendoBadge({
                        themeColor: color,
                        shape: 'circle',
                        text: totalItems
                    });
                }
                function changeLanguage(text) {
                    kendo.ui.progress($("#taskBoard"), true);

                    if (text == "en-US") {
                        if (kendo.ui.Dialog) {
                            kendo.ui.Dialog.prototype.options.messages =
                                $.extend(true, kendo.ui.Dialog.prototype.options.localization, {
                                    "close": "close"
                                });
                        }
                        /* Alert */
                        if (kendo.ui.Alert) {
                            kendo.ui.Alert.prototype.options.messages =
                                $.extend(true, kendo.ui.Alert.prototype.options.localization, {
                                    "okText": "ok"
                                });
                        }

                        if (kendo.ui.Confirm) {
                            kendo.ui.Confirm.prototype.options.messages =
                                $.extend(true, kendo.ui.Confirm.prototype.options.localization, {
                                    "okText": "ok",
                                    "cancel": "cancel"
                                });
                        }

                        if (kendo.ui.TaskBoard) {
                            kendo.ui.TaskBoard.prototype.options.messages =
                                $.extend(true, kendo.ui.TaskBoard.prototype.options.messages, {


                                    edit: "Edit",
                                    createNewCard: "Create new card",
                                    create: "create",
                                    search: "search",
                                    previewCard: "preview",
                                    addCard: "add card",
                                    editCard: "edit card",
                                    deleteCard: "delete card",
                                    addColumn: "add column",
                                    editColumn: "edit column",
                                    deleteColumn: "delete column",
                                    close: "close",
                                    cancel: "cancel",
                                    "delete": "delete",
                                    saveChanges: "save changes",
                                    title: "title:",
                                    description: "description:",
                                    newColumn: "new column",
                                    deleteColumnConfirm: "are you sure you want to delete this column?",
                                    deleteCardConfirm: "are you sure you want to delete this card?"

                                });
                        }
                        kendo.ui.progress($("#taskBoard"), false);
                        createGrid();

                    }
                    else {

                        //$.ajax({
                        //    url: "~/web/js/kendo.messages.tr-TR.js",
                        //    dataType: "script",
                        //    success: function () {
                        //        console.log("Harici dosyası hatasız yüklendi.");
                        //    },
                        //    error: function (result) {
                        //        console.log("Harici dosyası hatalı .");
                        //    }
                        //});

                        /* Dialog */

                        if (kendo.ui.Dialog) {
                            kendo.ui.Dialog.prototype.options.messages =
                                $.extend(true, kendo.ui.Dialog.prototype.options.localization, {
                                    "close": "Kapat"
                                });
                        }

                        /* Alert */

                        if (kendo.ui.Alert) {
                            kendo.ui.Alert.prototype.options.messages =
                                $.extend(true, kendo.ui.Alert.prototype.options.localization, {
                                    "okText": "tamam"
                                });
                        }
                        /* Confirm */
                        //(function ($, undefined) {

                        if (kendo.ui.Confirm) {
                            kendo.ui.Confirm.prototype.options.messages =
                                $.extend(true, kendo.ui.Confirm.prototype.options.messages, {
                                    "okText": "Test",
                                    "cancel": "İptal"
                                });
                        }

                        if (kendo.ui.TaskBoard) {
                            kendo.ui.TaskBoard.prototype.options.messages =
                                $.extend(true, kendo.ui.TaskBoard.prototype.options.messages, {
                                    edit: "düzenleme",
                                    createNewCard: "yeni kart oluştur",
                                    create: "ekle",
                                    search: "arama",
                                    previewCard: "önizleme",
                                    addCard: "kart ekle",
                                    editCard: "kart düzenle",
                                    "deleteCard": "kart sil",
                                    addColumn: "sütun ekle",
                                    editColumn: "sütun düzenle",
                                    deleteColumn: "sütun sil",
                                    close: "kapat",
                                    cancel: "iptal",
                                    "delete": "sil",
                                    saveChanges: "değişiklikleri kaydet",
                                    title: "başlık:",
                                    description: "açıklama:",
                                    newColumn: "yeni sütun",
                                    deleteColumnConfirm: "bu sütunu silmek istediğinden emin misin?",
                                    deleteCardConfirm: "bu kartı silmek istediğinden emin misin?"

                                });
                        }

                        kendo.ui.progress($("#taskBoard"), false);
                        createGrid();

                    }


                }
                //function createGrid() {
                //    var element = $("#taskBoard");
                //    if (element.data("kendoTaskBoard")) {
                //        element.data("kendoTaskBoard").destroy();
                //        element.empty();
                //    }
                //    element.kendoTaskBoard({
                //        dataSource: dataSource,
                //        editable: "inline",
                //        columnSettings: {
                //            dataTextField: "Text",
                //            dataStatusField: "Status",
                //            dataOrderField: "Order",
                //            template: kendo.template($("#column-template").html()),
                //            buttons: ["editColumn", "addCard", "deleteColumn"],
                //        },
                //        columns: {

                //            transport: {

                //                read: function (e) {

                //                    $.ajax({

                //                        url: "/Default/KendoTable",
                //                        dataType: "json",
                //                        success: function (result) {
                //                            e.success(result);
                //                        },
                //                        error: function (result) {
                //                            e.error(result);
                //                        }
                //                    });
                //                },
                //                update: function (e) {
                //                    // Batch is disabled.
                //                    var updatedItemID = e.data.Text;
                //                    var id = e.data.ID;

                //                    $.ajax({

                //                        url: "/Default/UpdateTable/",
                //                        type: "post",
                //                        dataType: "json",
                //                        data: { "updatedItem": updatedItemID, "id": id },


                //                    });
                //                    e.success();

                //                },
                //                destroy: function (e) {
                //                    // Locate item in original datasource and remove it.

                //                    var ColId = e.data.ID;
                //                    console.log(ColId);
                //                    $.ajax({
                //                        url: "/Default/DestroyTable/" + ColId,
                //                        dataType: "json",
                //                        type: "post",
                //                    });
                //                    e.success();
                //                },
                //                create: function (e) {
                //                    var textId = e.data.Text;


                //                    $.ajax({
                //                        url: "/Default/NewTable/" + textId,
                //                        type: "post",

                //                    });
                //                    e.success();

                //                },
                //                error: function (e) {
                //                    // Handle data operation error.
                //                    alert("Status: " + e.status + "; Error message: " + e.errorThrown);
                //                },
                //            },
                //            schema: {
                //                model: {
                //                    id: "ID",
                //                    fields: {
                //                        "ID": { type: "number" },
                //                        "Text": { type: "string" },
                //                        "Status": { type: "string", defaultValue: "todo" },
                //                        "Order": { type: "number" }
                //                    }
                //                }
                //            }
                //        },
                //        cardMenu: [{ name: "editCard" }, { name: "deleteCard" }, { name: "Details", icon: "gear", text: "Details", command: "DetailsCommand", options: "myvalue", spriteCssClass: "custom-class" }],

                //        dataCategoryField: "Category",
                //        dataDescriptionField: "Description",
                //        dataTitleField: "Title",
                //        dataStatusField: "Status",
                //        dataOrderField: "Order",
                //        height: 970,
                //        dataBound: onDataBound,
                //        columnsDataBound: onColumnDataBound,
                //        moveStart: onMoveStart,
                //        moveEnd: onMoveEnd,
                //        resources: [
                //            {
                //                field: "Category",
                //                title: "Priority",
                //                dataSource: priorities

                //            }
                //        ],
                //        previewPane: {
                //            template: "<p>#:Description#</p>" +
                //                "<p>#:resources.Category.title#: <span style='background-color: #:resources.Category.color#'>&nbsp;</span> #:resources.Category.text#</p>"
                //        },
                //        editable: {
                //            form: {
                //                buttonsTemplate: "",
                //                items: [{
                //                    field: "Title",
                //                    label: "Title:"
                //                }, {
                //                    field: "Description",
                //                    label: "Description:"
                //                }, {
                //                    field: "Category",
                //                    label: "Priority:",
                //                    editor: "DropDownList",
                //                    editorOptions: {
                //                        dataTextField: "text",
                //                        dataValueField: "value",
                //                        dataSource: priorities,
                //                        template: "<span style='background-color: #:color#'>&nbsp;</span> #:text#",
                //                        valueTemplate: "<span style='background-color: #:color#'>&nbsp;</span> #:text#"
                //                    }
                //                }]
                //            }
                //        },

                //        template: kendo.template($("#card-template").html()),


                //    });

                //}
                $(document).ready(function () {

                    $("#language").kendoDropDownList({

                        dataSource: [

                            { text: "en-US" },
                            { text: "tr-TR" },


                        ],
                        dataTextField: "text",
                        dataValueField: "value",
                        // change: changeLanguage,
                        select: function (e) {

                            //var value = this.value();

                            var item = e.item;
                            var text = item.text();
                            // Use the selected item or its text
                            changeLanguage(text);
                        },

                    });

                    $("#language").data("kendoDropDownList").trigger("change");

                });
            </script>

            <script>

                $(".k-taskboard-card k-card k-cursor-move k-taskboard-card-category").kendoDraggable({
                    hint: function (element) {
                        return element.clone();
                    }
                });

                $(".k-taskboard-column-cards-container").kendoDropTargetArea({
                    filter: "",
                    drop: onDrop
                });

                function onDrop(e) {
                    if (e.card.get("Status") == "todo" && e.column.get("Status") == "done")
                        e.preventDefault();


                }
            </script>

        </div>
    </div>

    <style>
        .k-card-image {
            display: block;
            border-radius: 25em;
            height: 32px;
            object-fit: cover;
            position:relative;
            width: 32px;
            border-color: black;
        }
        .box-col {
            min-width: 30px;
            max-width: 100px;
            padding-top: 5px;
            padding-left: 18px;
            display: inline-flex;
        }

        #language {
            min-width: 100px;
        }

        .template-container {
            padding: 10px 10px 0px 10px;
        }

            .template-container img {
                margin-top: 10px;
                margin-bottom: 10px;
                margin-left: -10px;
            }

        .column-status {
            padding-top: 5px;
        }

        .column-text {
            padding-left: 10px;
        }

        .column-template-container,
        .template-header {
            width: 100%;
            display: flex;
        }

        .column-buttons {
            margin-left: auto;
            margin-right: 0;
            padding-right: 5px;
        }

        .tooltip-template-container {
            height: 100px;
        }

        .template-menu {
            margin-left: auto;
            margin-right: 0;
        }

        .template-title {
            color: red;
            word-wrap: break-word;
        }

        .k-icon k-i-globe {
            /*padding-top: 5px;
        padding-left: 10px;*/
            font-size: 0.73em;
            width: 10px;
            height: 10px;
        }

        .k-taskboard-drag-hint {
            font: 400 14px Arial,Helvetica,sans-serif;
        }
    </style>

</body>

</html>


